#pragma once

#include <vulkan/vulkan.h>

namespace vk {
    enum class Structure {
        Application = VK_STRUCTURE_TYPE_APPLICATION_INFO,
        Instance = VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO,
        Queue = VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO,
        Device = VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO,
        SubmitInfo = VK_STRUCTURE_TYPE_SUBMIT_INFO,
        MemoryAllocate = VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO,
        MappedMemoryRange = VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE,
        BindSparse = VK_STRUCTURE_TYPE_BIND_SPARSE_INFO,
        Fence = VK_STRUCTURE_TYPE_FENCE_CREATE_INFO,
        Semaphore = VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO,
        Event = VK_STRUCTURE_TYPE_EVENT_CREATE_INFO,
        QueryPool = VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO,
        Buffer = VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO,
        BufferView = VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO,
        Image = VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO,
        ImageView = VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO,
        ShaderModule = VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO,
        PipelineCache = VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO,
        PipelineShaderStage = VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO,
        PipelineVertexInputState = VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO,
        PipelineInputAssemblyState = VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO,
        PipelineTessellationState = VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO,
        PipelineViewportState = VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO,
        PipelineRasterizationState = VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO,
        PipelineMultisampleState = VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO,
        PipelineDepthStencilState = VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO,
        PipelineColorBlendState = VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO,
        PipelineDynamicState = VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO,
        PipelineGraphics = VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO,
        PipelineCompute = VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO,
        PipelineLayout = VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO,
        Sampler = VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO,
        DescriptorSetLayout = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO,
        DescriptorPool = VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO,
        DescriptorSetAllocate = VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO,
        WriteDescriptorSet = VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET,
        CopyDescriptorSet = VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET,
        Framebuffer = VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO,
        RenderPass = VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO,
        CommandPool = VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO,
        CommandBufferAllocate = VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO,
        CommandBufferInheritance = VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO,
        CommandBufferBegin = VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO,
        RenderPassBegin = VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO,
        BufferMemoryBarrier = VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER,
        ImageMemoryBarrier = VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER,
        MemoryBarrier = VK_STRUCTURE_TYPE_MEMORY_BARRIER,
        LoaderInstance = VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO,
        LoaderDevice = VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO,
        Swapchain = VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR,
        Present = VK_STRUCTURE_TYPE_PRESENT_INFO_KHR,
        DebugReportCallback = VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT,
    };
}